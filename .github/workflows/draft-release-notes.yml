name: Create Draft Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 25.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  create-draft-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Validate and Extract Changelog
        id: extract_changelog
        run: |
          VERSION="${{ github.event.inputs.version }}"
          TAG="v$VERSION"
          FIRST_VERSION=$(grep -Po '^\s*-\s*\[\s*\K[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -1)

          if [ "$FIRST_VERSION" != "$VERSION" ]; then
            echo "::error ::CHANGELOG.md's latest version '$FIRST_VERSION' does not match input version '$VERSION'"
            exit 1
          fi

          awk -v ver="$VERSION" '
            $0 ~ "^[[:space:]]*##[[:space:]]+" ver " -" { in_section=1; next }
            in_section {
              if ($0 ~ "^[[:space:]]*##[[:space:]]+") exit
              print
            }
          ' CHANGELOG.md > latest_changelog.txt

          echo "changelog_section<<EOF" >> $GITHUB_OUTPUT
          cat latest_changelog.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Git Tag if not exists
        run: |
          VERSION="${{ github.event.inputs.version }}"
          TAG="v$VERSION"
          echo "TAG=$TAG" >> $GITHUB_ENV

          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag "$TAG"
            git push origin "$TAG"
          fi

      - name: Set up .NET SDK (includes NuGet CLI)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'

      - name: Configure NuGet Source for Artifactory
        run: |
          nuget sources Add \
            -Name Artifactory \
            -Source "https://pull.artifacts.ni.com/artifactory/api/nuget/v3/rnd-nuget-ci-niartifacts/index.json" \
            -Username "${{ secrets.JFROG_USERNAME }}" \
            -Password "${{ secrets.JFROG_NUGET_PASSWORD }}"
          
          nuget setapikey "${{ secrets.JFROG_USERNAME }}:${{ secrets.JFROG_NUGET_PASSWORD }}" -Source Artifactory

      - name: Download .nupkg from Artifactory
        run: |
          VERSION="${{ github.event.inputs.version }}"
          PACKAGE="NationalInstruments.SemiconductorTestLibrary"
          PACKAGE_ID="$PACKAGE.$VERSION.nupkg"

          mkdir -p downloaded_package
          cd downloaded_package
          nuget install $PACKAGE -Version $VERSION -Source Artifactory -OutputDirectory . -Verbosity detailed

          # Move the .nupkg to root
          find . -name "*.nupkg" -exec mv {} ../ \;

      - name: Create Draft Release and Attach Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          body: |
            ${{ steps.extract_changelog.outputs.changelog_section }}
          draft: true
          files: |
            NationalInstruments.SemiconductorTestLibrary.${{ github.event.inputs.version }}.nupkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
