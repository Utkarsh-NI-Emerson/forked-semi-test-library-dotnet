name: Create Draft Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 25.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  create-draft-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Extract and Validate Latest Changelog
        id: extract_changelog
        run: |
          VERSION="${{ github.event.inputs.version }}"
          TAG="v$VERSION"
          
          echo "Validating version: $VERSION"
          
          FIRST_VERSION=$(grep -Po '^\s*-\s*\[\s*\K[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -1)
          echo "Extracted FIRST_VERSION: '$FIRST_VERSION'"
          
          if [ "$FIRST_VERSION" != "$VERSION" ]; then
            echo "::error ::CHANGELOG.md's latest version '$FIRST_VERSION' does not match input '$VERSION'"
            exit 1
          fi
          
          awk -v ver="$VERSION" '
            $0 ~ "^[[:space:]]*##[[:space:]]+" ver " -" { in_section=1; next }
            in_section {
              if ($0 ~ "^[[:space:]]*##[[:space:]]+") exit
              print
            }
          ' CHANGELOG.md > latest_changelog.txt
          
          echo "changelog_section<<EOF" >> $GITHUB_OUTPUT
          cat latest_changelog.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Git Tag if Not Exists
        run: |
          VERSION="${{ github.event.inputs.version }}"
          TAG="v$VERSION"
          echo "TAG=$TAG" >> $GITHUB_ENV
          
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag "$TAG"
            git push origin "$TAG"
          fi

      - name: Install JFrog CLI
        run: |
          curl -fL https://getcli.jfrog.io | sh
          sudo mv jfrog /usr/local/bin/jfrog

      - name: Authenticate with JFrog Artifactory
        run: |
          jfrog rt config --url "https://pull.artifacts.ni.com/artifactory" --user "${{ secrets.JFROG_USERNAME }}" --password "${{ secrets.JFROG_PASSWORD }}"

      - name: Download NuGet package from JFrog using JFrog CLI
        run: |
          VERSION="${{ github.event.inputs.version }}"
          PACKAGE_NAME="NationalInstruments.SemiconductorTestLibrary"
          FILE_NAME="$PACKAGE_NAME.$VERSION.nupkg"
          ARTIFACTORY_PATH="rnd-nuget-ci/$PACKAGE_NAME/$FILE_NAME"
          jfrog rt download "$ARTIFACTORY_PATH" --flat=true --output="$FILE_NAME"

          echo "Downloaded file details:"
          ls -lh "$FILE_NAME"
          echo "SHA256 checksum:"
          sha256sum "$FILE_NAME"

          echo "PACKAGE_PATH=$FILE_NAME" >> $GITHUB_ENV

      - name: Create Draft Release and Attach Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          body: |
            **Release Notes:**
            ${{ steps.extract_changelog.outputs.changelog_section }}
          draft: true
          files: ${{ env.PACKAGE_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
