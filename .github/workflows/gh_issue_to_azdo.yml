name: Create AzDo Work Item on New GitHub Issue

on:
  issues:
    types: [opened]

jobs:
  create_azdo_work_item:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Extract Issue Details
        id: issue
        run: |
          # Properly escape and handle JSON values
          echo "title=$(echo '${{ github.event.issue.title }}' | jq -r 'tojson')" >> $GITHUB_ENV
          echo "body=$(echo '${{ github.event.issue.body }}' | jq -r 'tojson')" >> $GITHUB_ENV
          echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_ENV
          echo "issue_url=${{ github.event.issue.html_url }}" >> $GITHUB_ENV
          # Handle labels more carefully
          echo "labels=$(echo '${{ toJson(github.event.issue.labels) }}' | jq -c '[.[].name]')" >> $GITHUB_ENV
      
      - name: Determine Work Item Type
        id: work_item_type
        run: |
          # Parse labels properly and handle null cases
          LABELS=$(echo '${{ env.labels }}' | jq -r '.[]?' 2>/dev/null || echo "")
          TYPE="Customer Escalation"  # Default type
          
          # Case-insensitive label matching with proper string handling
          if echo "$LABELS" | grep -qi "\\bbug\\b"; then
            TYPE="Bug"
          elif echo "$LABELS" | grep -qi "\\benhancement\\b"; then
            TYPE="User Story"
          fi
          
          echo "work_item_type=$TYPE" >> $GITHUB_ENV
          echo "Selected type: $TYPE" # Debug output
     
      - name: Notify Developers via Microsoft Teams
        run: |
          # Ensure all variables are properly quoted and escaped
          MESSAGE=$(jq -n \
            --arg title "${title:-Untitled}" \
            --arg body "${body:-No description provided}" \
            --arg issue_url "$issue_url" \
            --arg issue_number "$issue_number" \
            --arg labels "${labels:-[]}" \
            --arg type "$work_item_type" \
            '{
              "@type": "MessageCard",
              "@context": "https://schema.org/extensions",
              "themeColor": "0076D7",
              "summary": "New GitHub Issue Assigned",
              "sections": [{
                "activityTitle": "**New GitHub Issue Created**",
                "facts": [
                  { "name": "Title", "value": $title },
                  { "name": "Issue Number", "value": ("#" + $issue_number) },
                  { "name": "Work Item Type", "value": $type },
                  { "name": "Labels", "value": $labels },
                  { "name": "GitHub Issue", "value": $issue_url },
                  { "name": "Description", "value": $body }
                ],
                "markdown": true
              }]
            }')
          
          # Add error handling for the curl command
          if ! curl -H "Content-Type: application/json" -d "$MESSAGE" "${{ secrets.TEAMS_WEBHOOK_URL }}"; then
            echo "Failed to send Teams notification"
            exit 1
          fi
