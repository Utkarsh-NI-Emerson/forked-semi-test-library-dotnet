name: Comment on Fixed Issues (Filtered by Release Date and Comment User)

on:
  create:
    # Trigger when a branch matching release/* is created.
    branches:
      - 'release/*'

jobs:
  comment-on-issues:
    runs-on: ubuntu-latest
    steps:
      - name: Process issues for new release
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            // Extract version from the branch name (e.g., "refs/heads/release/25.5")
            const branchRef = context.ref;
            const version = branchRef.replace('refs/heads/release/', '');
            // Build the release link using the branch URL format
            const releaseLink = `https://github.com/${owner}/${repo}/tree/release/${version}`;
            
            // Define the target username for filtering comments.
            const targetUser = "Utkarsh-NI-Emerson"; // Replace with the actual username.
            
            // Search for issues that include the fixed comment text.
            const searchQuery = `repo:${owner}/${repo} is:issue "Issue has been fixed and should be in next release." in:comments`;
            console.log("Search query:", searchQuery);
            
            const { data: searchResults } = await github.rest.search.issuesAndPullRequests({
              q: searchQuery,
              per_page: 100,
            });
            console.log(`Found ${searchResults.total_count} issues with matching comment.`);
            
            // Process each issue.
            for (const issue of searchResults.items) {
              const { data: comments } = await github.rest.issues.listComments({
                owner,
                repo,
                issue_number: issue.number,
                per_page: 100,
              });
              
              let eligible = false;
              for (const comment of comments) {
                console.log(`Evaluating comment ${comment.id} on issue #${issue.number}`);
                const containsText = comment.body.includes("Issue has been fixed and should be in next release.");
                const isFromTargetUser = comment.user.login === targetUser;
                console.log(`Comment ${comment.id}: Contains required text? ${containsText}, Is from target user? ${isFromTargetUser}`);
                if (containsText && isFromTargetUser) {
                  eligible = true;
                  break;
                }
              }
              
              if (eligible) {
                const commentBody = `The fix for this issue is included in version ${version}, which has now been released ([click here](${releaseLink})). This issue will auto close within the next 30 days.`;
                await github.rest.issues.createComment({
                  owner,
                  repo,
                  issue_number: issue.number,
                  body: commentBody,
                });
                console.log(`Comment added to issue #${issue.number}`);
              } else {
                console.log(`Issue #${issue.number} is not eligible; skipping.`);
              }
            }
