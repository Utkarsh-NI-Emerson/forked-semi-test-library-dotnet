name: [TEST] Create Draft Release Minimal

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 25.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  release-steps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate and Extract Changelog
        id: extract_changelog
        run: |
          VERSION="${{ github.event.inputs.version }}"
          TAG="v$VERSION"

          FIRST_VERSION=$(grep -Po '^\s*-\s*\[\s*\K[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -1)
          if [ "$FIRST_VERSION" != "$VERSION" ]; then
            echo "::error ::CHANGELOG.md's latest version '$FIRST_VERSION' does not match input version '$VERSION'"
            exit 1
          fi

          awk -v ver="$VERSION" '
            $0 ~ "^[[:space:]]*##[[:space:]]+" ver " -" { in_section=1; next }
            in_section {
              if ($0 ~ "^[[:space:]]*##[[:space:]]+") exit
              print
            }
          ' CHANGELOG.md > latest_changelog.txt

          echo "changelog_section<<EOF" >> $GITHUB_OUTPUT
          cat latest_changelog.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Git Tag if not exists
        run: |
          VERSION="${{ github.event.inputs.version }}"
          TAG="v$VERSION"
          echo "TAG=$TAG" >> $GITHUB_ENV

          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists. Skipping tag creation."
          else
            git config user.name "github-actions"
            git config user.email "github-actions@github.com"
            git tag "$TAG"
            git push origin "$TAG"
          fi

      - name: Create Branch from Tag if not exists
        run: |
          VERSION="${{ github.event.inputs.version }}"
          TAG="v$VERSION"
          BRANCH="releases/$VERSION"

          if git ls-remote --exit-code --heads origin "$BRANCH"; then
            echo "Branch $BRANCH already exists. Skipping branch creation."
          else
            git fetch origin "$TAG"
            git checkout -b "$BRANCH" "$TAG"
            git push origin "$BRANCH"
          fi

      - name: Create Draft GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: v${{ github.event.inputs.version }}
          body: ${{ steps.extract_changelog.outputs.changelog_section }}
          draft: true
          target_commitish: releases/${{ github.event.inputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
